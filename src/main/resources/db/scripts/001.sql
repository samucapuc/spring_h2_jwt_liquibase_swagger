--liquibase formatted sql
--changeset samuel.chaves:001.1 context:test

	CREATE TABLE USERS (
	    ID              BIGINT  GENERATED BY DEFAULT AS IDENTITY,
	    EMAIL        VARCHAR(255),
	    PASSWORD    VARCHAR(255),
	    PRIMARY KEY ( ID )
	);
	
    alter table users add constraint UK_USERS_EMAIL unique (email);
    
    create table PERFIS (
       USERS_ID BIGINT not null,
       PERFIS integer
    );
    
    alter table PERFIS add constraint FK_USERS_PERFIS foreign key (users_id) references users;

	CREATE TABLE JOB (
	    ID              BIGINT  GENERATED BY DEFAULT AS IDENTITY,
	    IS_ACTIVE       BOOLEAN,
	    NAME_JOB        VARCHAR(255),
	    ID_PARENT_JOB   BIGINT,
	    VERSION        INTEGER,
	    PRIMARY KEY ( ID )
	);
	
	CREATE TABLE TASK (
	    ID_TASK        INTEGER GENERATED BY DEFAULT AS IDENTITY,
	    IS_COMPLETED   BOOLEAN,
	    CREATED_AT     DATE,
	    NAME_TASK      VARCHAR(255),
	    VERSION        INTEGER,
	    WEIGHT         INTEGER,
	    ID_JOB         BIGINT,
	    PRIMARY KEY ( ID_TASK )
	);
	
	ALTER TABLE JOB ADD CONSTRAINT FK_JOB_JOB FOREIGN KEY ( ID_PARENT_JOB )
	    REFERENCES JOB;
	
	ALTER TABLE TASK ADD CONSTRAINT FK_TASK_JOB FOREIGN KEY ( ID_JOB )
	    REFERENCES JOB;
	    
	
	INSERT INTO USERS (
	    EMAIL,
	    PASSWORD  
	) VALUES('admin@bancointer.com.br','$2a$10$GjkIfVIt4fIrzEjOxSGstOpTr1miK7WdtSwpAXOACbf3a5kJZGWDO');
	
	
	
	INSERT INTO USERS (
	    EMAIL,
	    PASSWORD  
	) VALUES('somenteleitura@bancointer.com.br','$2a$10$LnkfERzOsgQ8uaYrDKb0AuqQLR9PpOsTWH9TY32vCmKl5LlL/Ejsu');	
	
	
	INSERT INTO PERFIS (
	    USERS_ID,PERFIS
	) VALUES(1,1);		
	
	INSERT INTO PERFIS (
	    USERS_ID,PERFIS
	) VALUES(2,2);	
	    
	INSERT INTO JOB (
	    IS_ACTIVE   ,
	    NAME_JOB    ,
	    VERSION 	,
	    ID_PARENT_JOB       
	) VALUES(TRUE,'FIRST JOB',0,NULL);	   
	
	INSERT INTO JOB (
	    IS_ACTIVE   ,
	    NAME_JOB    ,
	    VERSION 	,
	    ID_PARENT_JOB       
	) VALUES(TRUE,'SECOND JOB',0,1);		 
	    
	INSERT INTO TASK (
	    IS_COMPLETED   ,
	    CREATED_AT     ,
	    NAME_TASK      ,
	    VERSION        ,
	    WEIGHT         ,
	    ID_JOB         
	) VALUES(TRUE,CURRENT_DATE(),'FIRST TASK',0,5,NULL);
	
	
	INSERT INTO TASK (
	    IS_COMPLETED   ,
	    CREATED_AT     ,
	    NAME_TASK      ,
	    VERSION        ,
	    WEIGHT         ,
	    ID_JOB         
	) VALUES(FALSE,CURRENT_DATE(),'SECOND TASK',0,1,1);
	
	INSERT INTO TASK (
	    IS_COMPLETED   ,
	    CREATED_AT     ,
	    NAME_TASK      ,
	    VERSION        ,
	    WEIGHT         ,
	    ID_JOB         
	) VALUES(TRUE,CURRENT_DATE(),'THIRD TASK',0,1,2);
	
	INSERT INTO TASK (
	    IS_COMPLETED   ,
	    CREATED_AT     ,
	    NAME_TASK      ,
	    VERSION        ,
	    WEIGHT         ,
	    ID_JOB         
	) VALUES(FALSE,CURRENT_DATE(),'FOURTH TASK',0,1,2);
--rollback TRUNCATE TABLE TASK;